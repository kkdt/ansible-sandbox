#!/bin/bash
#
# Reference: https://github.com/moby/moby/blob/master/contrib/mkimage-yum.sh
#

WORKINGDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

timenow=$(date +%s)

set -e

function usage() {
    echo "$(basename $0) [options] imgname"
    echo "  imgname            Must have a corresponding .env file"
    echo "  -y  <yum.conf>     The full path to the yum.conf - default to /etc/yum.conf"
    echo "  -t  <tag>          Tag name - default 'latest'"
    echo "  -h                 Print the help message"
    exit 1
}

yumconf=/etc/yum.conf
version=latest

while getopts ":y:t:h" opt; do
    case $opt in
    y)
        yumconf=$OPTARG
        if [ ! -f "${yumconf}" ]; then
            echo "Error: ${yumconf} does not exist"
            exit 22
        fi
        ;;
    h)
        usage
        ;;
    t)
        version="$OPTARG"
        ;;
    *)
        echo "Invalid option: -$OPTARG"
        usage
        ;;
    esac
done
shift $((OPTIND - 1))

name=$1
if [ -z "${name}" ]; then
    usage
fi

source "${WORKINGDIR}/${name}.env"

target=$(mktemp -d --tmpdir $(basename $0).XXXXXX)

set -x

if [ ! -z "${packages}" ]; then
    yum -c "${yumconf}" \
        --installroot="${target}" \
        --releasever=/ --setopt=tsflags=nodocs \
        --setopt=group_package_types=mandatory \
        -y install "${packages[@]}"
else
    echo "No yum packages configured for ${name}"
fi

if [ ! -z "${rpms}" ]; then
    for file in "${rpms[@]}"
    do
        if [ -f ${file} ]; then
            echo "Installing RPM file ${file}"
            yum -c "${yumconf}" \
                --installroot="${target}" \
                --releasever=/ --setopt=tsflags=nodocs \
                --setopt=group_package_types=mandatory \
                -y localinstall "${file}"
        else
            echo "Cannot find RPM file ${file}"
        fi
    done
else
    echo "No RPM file(s) configured for ${name}"
fi

yum -c "${yumconf}" --installroot="${target}" -y clean all

cat > "$target"/etc/sysconfig/network <<EOF
NETWORKING=yes
HOSTNAME=localhost.localdomain
EOF

rm -rf "$target"/usr/{{lib,share}/locale,{lib,lib64}/gconv,bin/localedef,sbin/build-locale-archive}
rm -rf "$target"/usr/share/{man,doc,info,gnome/help}
rm -rf "$target"/usr/share/cracklib
rm -rf "$target"/usr/share/i18n
rm -rf "$target"/var/cache/yum
mkdir -p --mode=0755 "$target"/var/cache/yum
rm -rf "$target"/sbin/sln
rm -rf "$target"/etc/ld.so.cache "$target"/var/cache/ldconfig
mkdir -p --mode=0755 "$target"/var/cache/ldconfig

currentversion=$(docker images -q ${name}:${version})
if [ -z "${currentversion}" ]; then
    echo "Importing ${name}:${version}"
    tar --numeric-owner -c -C "${target}" . | docker import - ${name}:${version}
else
    echo "Reimporting existing ${name}:${version}"
    docker rmi ${name}:${version}
    tar --numeric-owner -c -C "${target}" . | docker import - ${name}:${version}
fi



docker run -i -t --rm ${name}:${version} /bin/bash -c 'echo success'

echo "Working directory for image ${name}:${version}: ${target}"
